{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,kBACpCC,EAAOF,SAASC,cAAc,iBAC9BE,EAASH,SAASC,cAAc,mBACvBD,SAASC,cAAc,yBACzBD,SAASC,cAAc,SAe/BG,iBAAiB,UAAU,SAAAC,G,mBAbhC,SAAuBC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAaDQ,CAAcC,EAAGT,GACdU,MAAK,SAAAC,GACJC,EAAAtB,GAASuB,OAAOC,QACd,qBAAiCC,OAAZN,EAAI,EAAE,QAAmBM,OAAbJ,EAAOX,MAAM,M,IAGjDgB,OAAM,SAAAL,GACLC,EAAAtB,GAASuB,OAAOI,QACd,oBAAgCF,OAAZN,EAAI,EAAE,QAAmBM,OAAbJ,EAAOX,MAAM,M,IAGnDA,GAASkB,EAETpB,EAAMqB,cAAcC,O,EArBxBtB,EAAMuB,iBACN,IAAIrB,EAAQsB,OAAO9B,EAAW+B,OACxBL,EAAYI,OAAO3B,EAAK4B,OACxBC,EAAgBF,OAAO1B,EAAO2B,OACpC,GAAIC,GAAiB,EACnBZ,EAAAtB,GAASuB,OAAOI,QAAS,wCAEzB,IAAK,IAAIQ,EAAI,EAAGA,EAAID,EAAeC,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst fisrtDelay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst submit = document.querySelector('button[type=\"submit\"]');\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  let delay = Number(fisrtDelay.value);\n  const stepDelay = Number(step.value);\n  const amountEntered = Number(amount.value);\n  if (amountEntered <= 0) {\n    Notiflix.Notify.failure(`Please enter number more then 0`);\n  } else {\n    for (let i = 0; i < amountEntered; i += 1) {\n      createPromise(i, delay)\n        .then(object => {\n          Notiflix.Notify.success(\n            `Fullfiled promise ${i + 1} in ${object.delay}ms`\n          );\n        })\n        .catch(object => {\n          Notiflix.Notify.failure(\n            `Rejected promise ${i + 1} in ${object.delay}ms`\n          );\n        });\n      delay += stepDelay;\n\n      event.currentTarget.reset();\n    }\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$fisrtDelay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","event","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","i","then","object","$parcel$interopDefault","Notify","success","concat","catch","failure","stepDelay","currentTarget","reset","preventDefault","Number","value","amountEntered","i1","_loop"],"version":3,"file":"03-promises.33ed32de.js.map"}